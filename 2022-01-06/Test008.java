/*===========================================
■■■ 자바 기본 프로그래밍 ■■■
=============================================*/

// 변수와 자료형
// 형변환
// 접미사 활용

public class Test008
{
	public static void main(String[] args)
	{
		int a;
		a  = 10;
		System.out.println("a 의 결과는 = " + a);
		//---> a 의 결과는 10

		int b = 20;
		System.out.println("b 의 결과는 = " + b);
		//---> b 의 결과는 20

		/*short c;
		c = a;
		System.out.println("c 의 결과는 = " + c);
		*/
		// 컴파일 에러 발생

		// 연산 및 처리 (대입 연산)
		//c  = a;  컴파일 에러 발생
		// 기본적으로 자료형이 작은 것에 큰 것을 담지 못함.
		// 자동 형변환 규칙 위반.

		// a = 10 명시적인 형변환 가능(강제 형변환)
		short c;
		c = (short)a; 
		// a가 가지고 있는 데이터를 
		// short 형으로 형 변환을 수행 한 후 변수 c에 대입.

		// a의 비트 변화 : 00000000 00000000 00000000 00001010 기존 int a = 10;
		// (short)a      : 00000000 00001010  → short 형으로 변환된 결과 (2byte)

		// 결과 출력
		System.out.println("c의 결과는 = " + c);
		//---> c의 결과는 = 10

		//변수 선언 및 초기화
		//long d = 10000000000;(100억) // 에러 : 대입연산자 기준으로 우측의 상수 표현이 먼저!!
								//  하지만 정수는 int 형으로 해당상수를 메모리에 할당. +21억 초과..
		long d = 10000000000l;	// 접미사 [L] 또는 [l]이 필요!	
								// 즉, 약 21억 이상 되는 상수에는 데이터 뒤에 접미사를 꼭 붙히자.

		//결과 출력
		System.out.println("d의 결과는 = " +d);
		//---> d의 결과는 = 10000000000
		
		long d2 = 10;
		System.out.println("d2의 결과는 = " +d2);
		//---> d2의 결과는 = 10 : int가 long으로 자동 형변환 가능.

		int e  = 030;
		System.out.println("e의 결과는 = " + e);
		//---> e의 결과는 = 24 ?? 접두어 0은 8진수로 바꿈.

		int f = 0xa6;
		System.out.println("f의 결과는 = " + f);
		//---> f의 결과는 =166
		//     접두어 0x -> 16진수
         
		
		//변수 선언 및 초기화
		//float g = 0.0; error  why? 0.0은 실수 그러므로 오른쪽 연산에서 double로 메모리 저장후 대입하므로
								//   double > float 자동형변환 불가능 float g = 0.0f; 접미사가 필요하다!!
		float g = 0; // 0은 어차피 메모리 내에서 0000000 굳이 뭐 형변환하고 그럴 필요가 없다.
		float g1 = 0.0f;
		System.out.println("g의 결과는 =  " + g);
		System.out.println("g1의 결과는 =  " + g1);
		//---> g의 결과는 =  0.0
		//     g1의 결과는 =  0.0
	}
}

/*실행 결과
a 의 결과는 = 10
b 의 결과는 = 20
c의 결과는 = 10
d의 결과는 = 10000000000
d2의 결과는 = 10
e의 결과는 = 24
f의 결과는 = 166
g의 결과는 =  0.0
g1의 결과는 =  0.0
계속하려면 아무 키나 누르십시오 . . .
*/