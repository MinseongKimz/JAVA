/*==========================================
  ■■■ 실행 흐름의 컨트롤(제어문) ■■■
============================================*/

//if ~ else 

//○과제
//  사용자로부터 임의의 알파벳 한 문자를 입력받아
//  이를 판별하여 입력받은 알파벳이 모음일 경우만
//  결과를 출력하는 프로그램을 구현한다.
//  단 대소문자를 모두 적용할 수 있도록 한다.
//  또한, 알파벳 이외의 문자가 입력되었을 경우
//  입력 오류에 대한 내용을 사용자에게 안내해 줄 수 있도록 한다.

//실행 예)
//임의의 알파벳 한 문자 입력 : A
//>> 모음 OK~!!!
//계속하려면 아무 키나...

//임의의 알파벳 한 문자 입력 : B
//계속하려면 아무 키나... // 그냥 종료

//임의의 알파벳 한 문자 입력 : 1
//>> 입력 오류
//계속하려면 아무 키나... // 그냥 종료

import java.io.IOException;

public class Test041
{
	public static void main(String[] args) throws IOException
	{
		
		char txt; // 입력받을 문자 담을 변수 선언

		System.out.print("임의의 알파벳 한 문자 입력 : ");
		txt = (char)System.in.read(); // read() 특성상 숫자로 받아서 char로 형변환


		if ('A'<=txt && txt<='Z') // 먼저 대문자 관련해서 if문 작성했습니다.
		{
			if (txt=='A'||txt=='E'||txt=='I'||txt=='O'||txt=='U') // 모음만 추리기
			{
				System.out.print(">> 모음 OK~!!!\n");
			}
			else 
			{
				return; // 대문자 중에서 다른건 어떤 출력 없이 종료기 때문에 
			}			// return 을 이용해서 main 메소드를 종료시켯습니다.
		}
		else if ('a'<=txt && txt<='z') // else if 를 통해 소문자 작성
		{
			if (txt=='a'||txt=='e'||txt=='i'||txt=='o'||txt=='u') //소문자 모음만 추리기
			{														
				System.out.print(">> 모음 OK~!!!\n");	
			}
			else
			{
				return; //소문자중 모음이 아닌건 그냥 종료~
			}	
		}
		else // 마지막으로 알파벳이 아닌건 입력오류를 출력.
		{
			System.out.println("입력오류"); 
		}
	}
}
/* 출력결과 
임의의 알파벳 한 문자 입력 : a
>> 모음 OK~!!!
계속하려면 아무 키나 누르십시오 . . .

임의의 알파벳 한 문자 입력 : I
>> 모음 OK~!!!
계속하려면 아무 키나 누르십시오 . . .

임의의 알파벳 한 문자 입력 : B
계속하려면 아무 키나 누르십시오 . . .

임의의 알파벳 한 문자 입력 : 7
입력오류
계속하려면 아무 키나 누르십시오 . . .
*/