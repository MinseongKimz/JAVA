2022-01-07
System.in.read() : 이 메소드는 한 문자만 가져온다.
단, 입력받은 하나의 문자를 문자 그대로 가져오는 것이 아니라
ASCII Code 값으로 반환한다. 

System.in.read()
문자 대기열을 걸고 한글자 입력을 기다림.
   ▼
-----------------------------------
    A + ENTER 
    -
   여기까진 ㄱㅊ
	-------
	엔터(\r + \n)		
-----------------------------------
한문자 입력 : A 
일것 같지만 
A + 엔터가 들어감
엔터  : \n + 캐리지 리턴(\r) 두가지 실행이됨.
\r 이 아마 아스키코드값 13
그래서 문자까진 잘되는데
그 다음이 안될꺼임.

그래서 
		ch = (char)System.in.read();
		
		System.out.print("한 자리 정수 입력 :");//....????????
		a = System.in.read() ;

다음 read를 기다리지 않고 윗줄을 입력받아버림.

그래서 해야하는 것 
System.in.skip(2); 가 필요
그러면 문자 대기열에서 \r, \n이 스킵이 될거다.

자 다음

		System.out.print("한 자리 정수 입력 :");
		a = System.in.read() ;

이걸 했을때 1을 넣어보면 
아마 49 가 나올꺼다 
그 이유는 
System.in.read() 는 ASCII Code 값으로 반환한다. 
0의 아스키코드는 48 즉 
System.in.read()에 숫자를 넣으면
숫자 0을 받는게 아니라 문자형태의 0을 받는것
그러므로   
숫자를 제대로 받기 위해서
		a의 값을 -48해줄 필요가 있다.
		


java.util.Scanner
Scanner sc = new Scanner(System.in);

3가지 입력 방법

이름 : 
나이 : 
체중 :
하나하나 받는법   System.out.print() x3 , name = sc.next(); kor = sc.nextInt(); 등등

이름과 나이와 체중 입력 (공백구분) :  System.out.print("이름 국어 영어 수학 입력 (공백 구분) : ");
				      name = sc.next(); kor = sc.nextInt(); 등등
	 	
이름과 나이와 체중 입력 (/로 구분) :sc = new Scanner(sc.next()).useDelimiter("\\s*/\\s*);
				    sc의 공백인식자 을 /로 바꿔주는 코드 
				    그 다음  name = sc.next(); kor = sc.nextInt(); 등등


삼항연산자의 중첩
삼항연산자 = x ? 뭐1 : 뭐2
	    x 가 참이라면 뭐 1 을 실행시키고 거짓이라면 뭐2를 실행

중첩하면
   변수 = x ? 뭐1 : ( y ? 뭐2 : 뭐3);
           x가 참이라면 뭐1 을 거짓이라면 ( y ? 뭐2 : 뭐3) 실행
	   다시 y가 참이라면 뭐2 실행 거짓이라면 뭐 3 실행하게 된다.