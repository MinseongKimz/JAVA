/*================================
  ■■■ 클래스와 인스턴스 ■■■
==================================*/

// 클래스와 인스턴스 활용

// 학생별로 국어점수, 영어점수, 수학점수를 입력받아
// 총점, 평균을 계산하는 프로그램을 구현한다
// 단, 클래스의 개념을 활용하여 작성할 수 있도록 한다
// 또 이과정에서 배열을 적극적으로 활용할 수 있도록 한다.
// 클래스 설계는 다음의 가이드라인에 따라 진행할 수 있도록 한다

// 프로그램을 구성하는 클래스
// 1. Record 클래스
//	  - 속성만 존재하는 클래스로 설계할 것~

// 2. Sungjuk 클래스
//    - 인원수를 입력받아, 입력받은 인원 수 만큼
//		이름 , 국어점수, 영어점수, 수학점수를 입력받고
//	    총점과 평균을 산출하는 클래스로 설계할 것
//		속성 : 인원수, Record 형태의 배열
//		기능 : 인원수 입력, 상세 데이터 입력, 총점 및 평균 연산, 결과 출력

// 3. Test103클래스 
//    - main() 메소드가 존재하는 외부 클래스로 설계할 것.

//실행 예)
//인원 수 입력(1 ~100) : 101
//인원 수 입력(1 ~100) : -150
//인원 수 입력(1 ~100) : 3

// 1번째 학생의 이름 입력 : 김민성
// 국어 점수 : 90
// 영어 점수 : 80
// 수학 점수 : 70

// 2번째 학생의 이름 입력 : 김민성2
// 국어 점수 : 92
// 영어 점수 : 82
// 수학 점수 : 72

// 3번째 학생의 이름 입력 : 김민성3
// 국어 점수 : 82
// 영어 점수 : 72
// 수학 점수 : 62

// 김민성  90 80 70 240 xx.xx  2
// 김민성2 92 82 72 246 xx.xx  1
// 김민성3 82 72 62 226 xx.xx  3

public class Test103
{
	public static void main(String[] args)
	{
		Sungjuk sj = new Sungjuk();
		sj.set();
		sj.input();
		sj.print();
	}
}

/*
입력 처리할 학생수 입력(명, 1~100) : 5
1번째 학생의 이름 입력 : 김민성
국어 점수 : 90
영어 점수 : 29
수학 점수 : 40
2번째 학생의 이름 입력 : 김민서
국어 점수 : 90
영어 점수 : 39
수학 점수 : 50
3번째 학생의 이름 입력 : 김갑을
국어 점수 : 96
영어 점수 : 45
수학 점수 : 45
4번째 학생의 이름 입력 : 김을갑
국어 점수 : 100
영어 점수 : 59
수학 점수 : 32
5번째 학생의 이름 입력 : 김인직
국어 점수 : 50
영어 점수 : 50
수학 점수 : 50

  김민성  90  29  40  159   53.00    4
  김민서  90  39  50  179   59.67    3
  김갑을  96  45  45  186   62.00    2
  김을갑 100  59  32  191   63.67    1
  김인직  50  50  50  150   50.00    5
계속하려면 아무 키나 누르십시오 . . .

*/