2022-01-19

접근제어 지시자와 정보은닉, 그리고 캡슐화

『접근제어지시자
  접근 지정자     →  접근을 막기위해 만들어진..	 
  접근 제한자    
  접근 제어자  』


지시자	:	public > protected > (default) > private|
 	 	누구나	 상속받	      상속x      나혼자	|
--------------------------------------------------------|
클래스내부	  o	    o	         o	   o	| 클래스
--------------------------------------------------------|
동일패키지	  o	    o	         o	   x	| 같은 폴더? 주소
--------------------------------------------------------|
상속받은 클래스   o	    o	         x	   x	| 	
--------------------------------------------------------|
이외의 영역	  o         x	         x	   x 	|
--------------------------------------------------------|

외부에 노출 시킬만한 클래스만 public 달아주자..
예를들어 계산기 클래스를 만드는데 계산기만 보여주면되지 덧셈클래스 뺄셈클래스 
다 보여줄 필요가 없다..

캡슐화
얕은 의미의 캡슐화 = 정보 은닉..

캡슐화는 관련있는 모든 메소드와 변수를 하나의 클래스로 묶는 것..

둘 이상의 클래스를 묶어 캡슐화를 완성할 수도 있다.

캡슐화는 메소드와 변수가 코드 레벨에서 묶이는걸 의미 하지 않는다.


캡슐화는 객체지향에서 실제 프로젝트에 적용하기 쉽지 않는 개념 중 하나이다.
또한, 캡슐화에는 정답이 없기 때문에 더 어렵게 느껴질 수 있다..

종합감기약에 어떤 효능을 넣어야 완벽한 종합감기약인가..? 


static 
탄생 시점 : 인스턴스 생성때가 아니라 자바가 클래스를 읽을 때(더 먼저다)  
그래서 클래스 변수 클래스 메소드라 부른다..
공유 


클래스.num1 >> 클래스 변수

그래서 전에 클래스 이름 직접 박지 않고 
this.num1 이런식으로 했다.

ob.num1 >> 인스턴스 변수

	non-static			    static
인스턴스 변수, 인스턴스 메소드  vs 클래스 변수, 클래스 메소드
	동적 변수 메소드		정적 변수 메소드































