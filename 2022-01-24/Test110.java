/*==================================
  ■■■ 정렬(Sort) 알고리즘 ■■■
====================================*/
/*
○	정렬	
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)
○	정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
	  → 보기좋게... 검색하기 위함

○	정렬의 종류
	: 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬, ....

*/

// 버블 정렬(Bubble Sort)

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62
// 계속하려면 아무 키나 누르세요...

public class Test110
{
	public static void main(String[] args)
	{
		int [] a = {52, 42, 12, 62, 60};
		/* 버블 정렬(Bubble Sort)
		42 52 12 62 60
		== --
		42 12 52 62 60
		   == --
		42 12 52 62 60
		      == --
	    42 12 52 60 62
		         == --
		------------------1회전 종료    쑝할때 기준이 움직임 > 기준이 j 비교는 j+1
		12 42 52 60 62
		== --
		12 42 52 60 62
		   == --
		12 42 52 60 62
			  == --
		------------------2회전 종료   2회전에서는 마지막도 안함 > 길이에서 -i 만큼 또 빠짐
		12 42 52 60 62
		== --
		12 42 52 60 62
		   == --
		------------------3회전 종료   i=2 이여서 2칸이 더빠짐 
		12 42 52 60 62
		== --
		------------------4회전 종료
		*/

		System.out.print("Source Data :");
		for( int n: a)
			System.out.print(n + " ");
		System.out.println();
		
		// 버블 정렬 
		/*
		for (int i = 0; i<a.length-1 ;i++ )
		{
			for (int j=0; j<a.length-i-1; j++ )
			{
				if (a[j]>a[j+1]) // 
				{
					// 자리 바꾸기
					a[j]= a[j]^a[j+1];
					a[j+1]= a[j+1]^a[j];
					a[j]= a[j]^a[j+1]; // 비트연산을 이용한 순서바꾸기
				}
			}
		}*/
		// 같이 풀이
		for (int i =1;i<a.length ;i++ )// 뒤에서 비교 대상을 하나씩 줄여주는 역할
		{
			for (int j=0;j<a.length-i ;j++ ) // i =1 > j = 0 1 2 3 // i=2 > j=012 //i=3 >j=01//i=4 > j=0 (기준자리)
			{							 //   비교자리     1 2 3 4            123          12          1 (비교자리)
				if (a[j]>a[j+1]) //만약 기준이 비교보다 크다면..
				{
					a[j]= a[j]^a[j+1];
					a[j+1]= a[j+1]^a[j];
					a[j]= a[j]^a[j+1]; // 비트연산을 이용한 순서바꾸기
				}
			}
		}
		System.out.print("Sorted Data :");

		for( int n: a)
			System.out.print(n + " ");
		System.out.println();
	}
}
/*
Source Data :52 42 12 62 60
Sorted Data :12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/